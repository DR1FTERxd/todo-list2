(()=>{"use strict";var e={};function t(){return e}function n(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function a(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e){a(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===r(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function i(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}var u={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function d(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.width?String(t.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}var s,l={date:d({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:d({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:d({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},c={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function m(e){return function(t,n){var a;if("formatting"===(null!=n&&n.context?String(n.context):"standalone")&&e.formattingValues){var r=e.defaultFormattingWidth||e.defaultWidth,o=null!=n&&n.width?String(n.width):r;a=e.formattingValues[o]||e.formattingValues[r]}else{var i=e.defaultWidth,u=null!=n&&n.width?String(n.width):e.defaultWidth;a=e.values[u]||e.values[i]}return a[e.argumentCallback?e.argumentCallback(t):t]}}function h(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n.width,r=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],o=t.match(r);if(!o)return null;var i,u=o[0],d=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth],s=Array.isArray(d)?function(e,t){for(var n=0;n<e.length;n++)if(e[n].test(u))return n}(d):function(e,t){for(var n in e)if(e.hasOwnProperty(n)&&e[n].test(u))return n}(d);return i=e.valueCallback?e.valueCallback(s):s,{value:i=n.valueCallback?n.valueCallback(i):i,rest:t.slice(u.length)}}}const f={code:"en-US",formatDistance:function(e,t,n){var a,r=u[e];return a="string"==typeof r?r:1===t?r.one:r.other.replace("{{count}}",t.toString()),null!=n&&n.addSuffix?n.comparison&&n.comparison>0?"in "+a:a+" ago":a},formatLong:l,formatRelative:function(e,t,n,a){return c[e]},localize:{ordinalNumber:function(e,t){var n=Number(e),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:m({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:m({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:m({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:m({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:m({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(s={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.match(s.matchPattern);if(!n)return null;var a=n[0],r=e.match(s.parsePattern);if(!r)return null;var o=s.valueCallback?s.valueCallback(r[0]):r[0];return{value:o=t.valueCallback?t.valueCallback(o):o,rest:e.slice(a.length)}}),era:h({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:h({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:h({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:h({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:h({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};var g=6e4,v=1440,y=30*v,p=365*v;class b{constructor(e,t,n){this.Tname=e,this.priority=t,this.time=n}}let w,M=[];document.querySelector("#addBtn").addEventListener("click",(function(e){e.preventDefault();const t=function(){const e=document.getElementById("names").value,t=document.getElementById("description").value;return new D(e,t)}();M.push(t),function(){const e=document.querySelector(".panelprjt");document.querySelectorAll(".project").forEach((t=>e.removeChild(t)));for(let e=0;e<M.length;e++)P(M[e])}(),console.log(M),function(){let e=document.getElementById("projectsDropdown");e.innerHTML="",M.forEach((function(t){let n=document.createElement("option");n.value=t.id,n.text=t.Dname,n.description=t.description,e.add(n)}))}()})),document.querySelector("#addTodo").addEventListener("click",(function(e,t){e.preventDefault(),w=W();const n=document.getElementById("projectsDropdown").value,a=M.find((e=>e.id===n));a.todos.push(w),W()}));const S=document.querySelector(".content");class D{constructor(e,t,n=[]){this.Dname=e,this.description=t,this.id=Math.random().toString(36),this.todos=n}}function W(){const e=document.getElementById("todo_name").value,t=document.getElementById("todo_priority").value,n=document.getElementById("todo_time").value;return new b(e,t,n)}function P(e){const r=document.querySelector(".panelprjt");let u=document.createElement("div");const d=document.createElement("h2"),s=document.createElement("h4");d.textContent=e.Dname,d.classList.add("projectName"),u.appendChild(d),s.textContent=e.description,s.classList.add("projectDescription"),u.appendChild(s),r.appendChild(u),u.classList.add("project"),u.setAttribute("id",M.indexOf(e)),r.addEventListener("click",(e=>{const r=e.target.closest(".project");if(r){document.querySelectorAll(".project").forEach((e=>{e.classList.remove("active")})),r.classList.add("active");const e=r.getAttribute("id"),u=M[e];S.innerHTML="",u.todos.forEach((e=>{const r=document.createElement("div"),u=function(e,r){return a(1,arguments),function(e,r,u){var d,s,l;a(2,arguments);var c=t(),m=null!==(d=null!==(s=null==u?void 0:u.locale)&&void 0!==s?s:c.locale)&&void 0!==d?d:f;if(!m.formatDistance)throw new RangeError("locale must contain localize.formatDistance property");var h=function(e,t){a(2,arguments);var n=o(e),r=o(t),i=n.getTime()-r.getTime();return i<0?-1:i>0?1:i}(e,r);if(isNaN(h))throw new RangeError("Invalid time value");var b,w,M=i(i({},u),{addSuffix:Boolean(null==u?void 0:u.addSuffix),comparison:h});h>0?(b=o(r),w=o(e)):(b=o(e),w=o(r));var S,D=String(null!==(l=null==u?void 0:u.roundingMethod)&&void 0!==l?l:"round");if("floor"===D)S=Math.floor;else if("ceil"===D)S=Math.ceil;else{if("round"!==D)throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");S=Math.round}var W,P=w.getTime()-b.getTime(),E=P/g,j=(P-(n(w)-n(b)))/g,T=null==u?void 0:u.unit;if("second"===(W=T?String(T):E<1?"second":E<60?"minute":E<v?"hour":j<y?"day":j<p?"month":"year")){var k=S(P/1e3);return m.formatDistance("xSeconds",k,M)}if("minute"===W){var C=S(E);return m.formatDistance("xMinutes",C,M)}if("hour"===W){var x=S(E/60);return m.formatDistance("xHours",x,M)}if("day"===W){var A=S(j/v);return m.formatDistance("xDays",A,M)}if("month"===W){var q=S(j/y);return 12===q&&"month"!==T?m.formatDistance("xYears",1,M):m.formatDistance("xMonths",q,M)}if("year"===W){var L=S(j/p);return m.formatDistance("xYears",L,M)}throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'")}(e,Date.now(),r)}(new Date(e.time));r.classList.add("todo"),r.innerHTML=`\n              <div class="todoName">${e.Tname}</div>\n              <div class="todoPriority">${e.priority}</div>\n              <div class="todoTime">${u}</div>\n            `,S.appendChild(r)}))}}))}const E=new b("a","m","22"),j=new D("asd","sss",[]);console.log(j),console.log(E)})();